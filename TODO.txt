NOTES and TODOS about Cairo and OOFCanvas


In Cairo, drawing needs to be done inside the callback for the gtk
expose_event.

Adding a CanvasItem to a Canvas or layer adds it to the Canvas or
layer's list of items.  Each item knows its bounding box in pixels.

In the expose event's callback:
  Get the exposed rectangle (GdkRectangle GdkExposeEvent::area)
  Convert rectangle to physical coordinates
  Loop over all layers from bottom to top:
     Loop over all items in layer from first to last:
        If item's bbox intersects exposed bounding box in physical coords:
	    Draw item
	    
Should each layer have its own Cairo Surface?  Each draws to its own
Surface and the Surfaces are then drawn with appropriate masks and
transparency to the final Surface.

Do we need to call gdk_window_invalidate_region() after changing the
canvas contents?  Or does Cairo do that for us after rendering?

---

Mouse clicks:

* Each CanvasItem knows its bounding box and can say whether a mouse
  click at a particular user coordinate hits it.

* Each CanvasLayer has a set of bins and knows which CanvasItems'
  bounding boxes overlap each bin.

* Given a mouse click position, compute which bin it's in (or bins, if
  on a boundary), find the CanvasItems whose bounding boxes overlap
  the bin(s), and ask each CanvasItem if the click hits them.  Return
  a list of CanvasItems.

Should setClickable be a CanvasLayer or CanvasItem attribute?

---

Don't assume that Python exists...  Don't call initializePyGTK or
PyGILState_Ensure/PyGILState_Release unless PYOOFCANVAS is defined.
Also don't run swig if it's not defined.

Do we want to support different scales in the x and y directions?
CanvasDot and CanvasLayer::pixel2user(double) assume that the scales
are the same.

---

Use Pango instead of Cairo::ToyFontFace?

Define CanvasGroup to allow a combination of objects to be defined and
duplicated at different positions and scales?

Instead of a separate non-scaled triangle class for arrowheads, make
arrowheads an option on the CanvasSegment.  Then the direction can be
inferred from the segment direction.  The head can be scaled or not,
like CanvasText.

Should objects be changeable?  When an object is added, removed, or
changed, should the layer be told so that just some part of it can be
updated?  Or is Cairo already taking care of all that for us?

Should default values for parameters be settable?  After calling
CanvasText::setFont, should the next text item created automatically
use the same font?
